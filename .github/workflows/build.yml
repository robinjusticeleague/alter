name: Build Rust for All Platforms

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-pc-windows-gnu, x86_64-apple-darwin, aarch64-apple-darwin, aarch64-linux-android, aarch64-apple-ios]
        os: [ubuntu-latest, windows-latest, macos-latest, ubuntu-latest, macos-latest]
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: aarch64-linux-android
            os: ubuntu-latest
          - target: aarch64-apple-ios
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - name: Install Chocolatey (Windows)
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
      - name: Install MinGW (Windows)
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: |
          choco install mingw -y
          refreshenv
      - name: Configure Cargo for Windows
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: |
          mkdir .cargo
          echo '[target.x86_64-pc-windows-gnu]' > .cargo/config.toml
          echo 'linker = "x86_64-w64-mingw32-gcc"' >> .cargo/config.toml
          echo 'ar = "x86_64-w64-mingw32-ar"' >> .cargo/config.toml
      - name: Install Android NDK
        if: matrix.target == 'aarch64-linux-android'
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip
          wget https://dl.google.com/android/repository/android-ndk-r23b-linux-x86_64.zip
          unzip android-ndk-r23b-linux-x86_64.zip -d $HOME
          echo "ANDROID_NDK_HOME=$HOME/android-ndk-r23b" >> $GITHUB_ENV
      - name: Optimize Cargo
        run: |
          echo '[profile.release]' >> Cargo.toml
          echo 'opt-level = "z"' >> Cargo.toml
          echo 'strip = true' >> Cargo.toml
          echo 'lto = true' >> Cargo.toml
          echo 'codegen-units = 1' >> Cargo.toml
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rust-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/rust*